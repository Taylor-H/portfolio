{"version":3,"file":"static/js/872.787fa0eb.chunk.js","mappings":"mNAgDA,EA9CgB,WACd,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAaMC,EAAW,SAACC,EAAOC,EAAMC,GAC7B,GACO,cADCD,EAEJ,GAAIC,EAAMC,QAAU,EAGlBL,GAAU,kBACLD,GADI,IAEPO,SAAU,yCAEP,CAIL,IAAIC,GAASC,EAAAA,EAAAA,MAAKT,EAAQ,YAC1BC,EAAUO,KAQlB,MACM,CAACV,OAAAA,EACDE,OAAAA,EACAU,aArCiB,SAACP,GAClBA,EAAMQ,UACN,IAAIP,EAAOD,EAAMS,OAAOR,KACpBS,EAAMV,EAAMS,OAAOP,MACvBH,EAASC,EAAMC,EAAKS,GAEpBd,GAAU,kBACHD,GADE,cAEJM,EAAMS,Q,UCRnBC,EAAAA,EAAAA,IAAKC,8BACL,IAqEA,EArEgB,WAChB,IAAMC,GAAYC,EAAAA,EAAAA,UAClB,EAAyCC,IACzC,GADA,EAAQR,aAAR,EAAsBZ,OAAtB,EAA8BE,QACGH,EAAAA,EAAAA,UAAS,CAACsB,WAAY,MAAvD,eAAOA,EAAP,KAAoBC,EAApB,KACA,GAAgCvB,EAAAA,EAAAA,UAAS,CACzCwB,UAAW,GACXC,SAAU,GACVC,QAAS,GACTC,MAAO,GACPC,MAAO,GACPC,QAAS,KANT,eAAOC,EAAP,KAAiBC,EAAjB,KAqBMC,GAAc,iBAAKC,UAAU,UAAf,WAClB,eAAIC,GAAG,gBAAP,wBADkB,6EAIdC,GACN,iCACE,eAAID,GAAG,gBAAP,6CACA,cAAGD,UAAU,gBAAb,iCACA,gBAAKA,UAAU,eAAf,UACE,kBAAMC,GAAG,QAAQE,IAAKjB,EAAWkB,SArBnB,SAACC,GACnBA,EAAEC,iBACFC,EAAAA,GAAAA,SAAA,UAAoBtB,mBAApB,UAA2DA,oBAAqCC,EAAUsB,QAA1G,UACGvB,+BACFwB,MAAK,SAACC,GACPC,QAAQC,IAAI,aAAc1B,GACT,OAAhBwB,EAAOG,KAAiBvB,EAAUoB,EAAOG,MAAOC,MAAM,6BACpD,SAACC,GACJJ,QAAQC,IAAIG,EAAMF,UAad,WACE,4BACE,kBAAOb,UAAU,YAAYgB,KAAK,OAAO1C,KAAK,YAAY2C,SAAUnB,EAAaoB,YAAa,iBAC9F,kBAAOlB,UAAU,wBAAwBgB,KAAK,OAAO1C,KAAK,WAAW4C,YAAY,aAAaD,SAAUnB,QAE1G,4BACE,kBAAOE,UAAU,YAAYgB,KAAK,OAAO1C,KAAK,UAAU4C,YAAY,UAAUD,SAAUnB,KACxF,kBAAOE,UAAU,wBAAwBgB,KAAK,QAAQ1C,KAAK,QAAQ4C,YAAY,iBAC7ED,SAAUnB,QAEd,0BACE,kBAAOE,UAAU,UAAUgB,KAAK,OAAO1C,KAAK,QAAQ4C,YAAY,mBAAmBD,SAAUnB,OAE/F,0BACE,qBAAUE,UAAU,eAAe1B,KAAK,UAAU4C,YAAY,YAAYD,SAAUnB,OAGtF,0BACE,mBAAQE,UAAU,iBAAiBgB,KAAK,SAASzC,MAAOsB,EAAxD,4BAQR,OACA,+BACE,gBAAKG,UAAU,QAAf,SACkB,OAAfX,EAAsBU,EAAcG","sources":["components/Contact/useForm.js","components/Contact/index.js"],"sourcesContent":["import { useState } from 'react';\nimport { omit } from 'lodash';\nconst useForm = () => {\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n\n    const handleChange = (event) => {\n        event.persist();\n        let name = event.target.name;\n        let val = event.target.value;\n        validate(event,name,val);\n\n        setValues({\n            ...values,\n            [name]:val,\n        })\n    }\n  const validate = (event, name, value) => {\n    switch (name) {\n      case 'firstname':\n        if (value.length <= 4) {\n          // we will set the error state\n\n          setErrors({\n            ...errors,\n            username: 'Username atleast have 5 letters',\n          });\n        } else {\n          // set the error state empty or remove the error for username input\n\n          //omit function removes/omits the value from given object and returns a new object\n          let newObj = omit(errors, 'username');\n          setErrors(newObj);\n        }\n        break;\n\n      default:\n        break;\n    }\n  };\n  return (\n        {values,\n        errors,\n        handleChange,}\n);\n\n}\n\nexport default useForm\n","import React, { useRef, useState } from 'react';\nimport emailjs from '@emailjs/browser';\nimport { init } from '@emailjs/browser';\nimport useForm from './useForm';\n// import { StyledSlideMenu, CloseMenuIcon, FaGithubIcon } from '../Styled/';\n\ninit(process.env.REACT_APP_USER_ID);\nconst Contact = () => {\nconst formState = useRef();\nconst { handleChange, values, errors } = useForm();\nconst [formResult , setResult] = useState({formResult: ''});\nconst [formData, setFormData] = useState({\nfirstname: '',\nlastname: '',\ncompany: '',\nphone: '',\nemail: '',\nmessage: '',\n});\n\nconst sendEmail = (e) => {\ne.preventDefault();\nemailjs.sendForm(`${process.env.REACT_APP_SERVICE_ID}`, `${process.env.REACT_APP_TEMPLATE_ID}`, formState.current,\n`${process.env.REACT_APP_USER_ID}`)\n.then((result) => {\nconsole.log('formResult', formState);\n(result.text === 'OK') ? setResult(result.text): alert('Message failed to send');\n}, (error) => {\nconsole.log(error.text);\n});\n};\n\nconst successHTML = <div className=\"success\">\n  <h5 id=\"detail-header\">Thank you.</h5>Your message has been sent. I will get back to you as soon as possible.\n</div>;\n\nconst formHTML = (\n<>\n  <h5 id=\"detail-header\">Interested in working with me?</h5>\n  <p className=\"margin-bottom\">Send me a message.</p>\n  <div className=\"connect-form\">\n    <form id=\"email\" ref={formState} onSubmit={sendEmail}>\n      <div>\n        <input className=\"input-box\" type=\"text\" name=\"firstname\" onChange={setFormData} placeholder={'First Name:'} />\n        <input className=\"input-box margin-left\" type=\"text\" name=\"lastname\" placeholder=\"Last Name:\" onChange={setFormData} />\n      </div>\n      <div>\n        <input className=\"input-box\" type=\"text\" name=\"company\" placeholder=\"Company\" onChange={setFormData} />\n        <input className=\"input-box margin-left\" type=\"email\" name=\"email\" placeholder=\"Email Address:\"\n          onChange={setFormData} />\n      </div>\n      <div>\n        <input className=\"subject\" type=\"text\" name=\"phone\" placeholder=\"phone - optional\" onChange={setFormData} />\n      </div>\n      <div>\n        <textarea className=\"comment-area\" name=\"message\" placeholder=\"Message: \" onChange={setFormData}></textarea>\n      </div>\n\n      <div>\n        <button className=\"connect-submit\" type=\"submit\" value={formData}>\n          Send\n        </button>\n      </div>\n    </form>\n  </div>\n</>\n);\nreturn (\n<>\n  <div className=\"con-h\">\n    {formResult === 'OK' ? successHTML : formHTML}\n  </div>\n</>\n);\n}\n\nexport default Contact;\n"],"names":["useState","values","setValues","errors","setErrors","validate","event","name","value","length","username","newObj","omit","handleChange","persist","target","val","init","process","formState","useRef","useForm","formResult","setResult","firstname","lastname","company","phone","email","message","formData","setFormData","successHTML","className","id","formHTML","ref","onSubmit","e","preventDefault","emailjs","current","then","result","console","log","text","alert","error","type","onChange","placeholder"],"sourceRoot":""}